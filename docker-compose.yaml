version: "3.8"

services:
  caddy:
    image: livekit/caddyl4
    command: run --config /etc/caddy.yaml --adapter yaml
    restart: unless-stopped
    network_mode: host
    volumes:
      - ./caddy.yaml:/etc/caddy.yaml
      - ./caddy_data:/data

  livekit:
    image: livekit/livekit-server:latest
    command: --config /etc/livekit.yaml
    restart: unless-stopped
    network_mode: host
    volumes:
      - ./livekit.yaml:/etc/livekit.yaml

  # redis:
  #   image: redis:7-alpine
  #   command: redis-server /etc/redis.conf
  #   restart: unless-stopped
  #   network_mode: host
  #   volumes:
  #     - ./redis.conf:/etc/redis.conf

  redis:
    image: redis:8.0.1
    container_name: redis
    ports:
      - "6379:6379"
    command: >
      redis-server
      --requirepass 2123tt
      --appendonly yes
      --appendfilename "appendonly.aof"
      --dir /data
    volumes:
      - /root/redis_data:/data
    restart: unless-stopped

  egress:
    image: livekit/egress:latest
    restart: unless-stopped
    network_mode: host
    cap_add:
      - CAP_SYS_ADMIN
    environment:
      - EGRESS_CONFIG_FILE=/etc/egress.yaml
    volumes:
      - ./egress.yaml:/etc/egress.yaml

  ingress:
    image: livekit/ingress:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - INGRESS_CONFIG_FILE=/etc/ingress.yaml
    volumes:
      - ./ingress.yaml:/etc/ingress.yaml

  asterisk:
    # image: andrius/asterisk
    image: amitgupta4in/asterisk:v1
    container_name: asterisk
    network_mode: host
    volumes:
      - ./asterisk-config:/etc/asterisk
      - ./asterisk-sounds:/var/lib/asterisk/sounds
      - ./asterisk-moh/caller_tune:/var/lib/asterisk/moh/caller_tune
      # - ./asterisk-agi:/var/lib/asterisk/agi-bin
    restart: unless-stopped
  
  # this is for sip to livekit or peer for asterisk
  sip:
    image: livekit/sip:v1.0.0
    network_mode: host
    environment:
      SIP_CONFIG_BODY: |
        api_key: 'APILodLwqNKJYqE'
        api_secret: 'TIbzUfLfcCd6KZjZlGgbxnKqTsHBy7zDe5bzDe9gg3UB'
        ws_url: 'ws://15.204.51.230:7880'      # LiveKit server's public API/WebSocket URL
        redis:
          address: 'localhost:6379'
          password: '2123tt'
        sip_port: 5060
        rtp_port: 10000-20000
        use_external_ip: true
        flood_protection: false             # disables SIP flood detection
        logging:
          level: debug

  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    restart: always
    network_mode: host
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - /root/qdrant_data:/qdrant/storage
      - ./qdrant_config.yaml:/qdrant/config/production.yaml

  rag:
    # build: ./rag
    image: amitgupta4in/qdrant-rag:v1
    network_mode: host
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - QDRANT_HOST=localhost
      - QDRANT_PORT=6333
      - QDRANT_API_KEY=2123tt
    depends_on:
      - qdrant          